# Archivos y Librerias ----
setwd("C:/Users/luluf/OneDrive - Universidad Nacional de Colombia/SEA-UN-Movilidad"); getwd()
library(readxl)
library(dplyr)
library(sf)
library(sf)
library(ggplot2)
library(leaflet)
library(colorRamps)
library(readxl)
zat_shp <- st_read("Datos_Originales/Zonificacion_EODH/ZAT2023/ZAT2023.shp") %>%
st_transform(crs = 4326)
df_viajes <- read_excel("Datos_Originales/Base_datos_procesada_EODH/XLSX/d. Modulo viajes.xlsx")
df_etapas <- read_excel("Datos_Originales/Base_datos_procesada_EODH/XLSX/e. Modulo etapas.xlsx")
loca_shp <- st_read("Datos_Originales/loca.zip")
loca_shp <- st_read("Datos_Originales/loca/Loca.shp") %>% st_transform(crs = 4326)
View(loca_shp)
names(loca_shp)
str(loca_shp)
ggplot(data = loca_shp) +
geom_sf(aes(fill = LocNombre), color = "black", size = 0.2) +
labs(title = "Mapa de Localidades",
fill = "Localidad") +
theme_minimal()
ggplot(data = loca_shp) +
geom_sf(aes(fill = LocNombre), color = "black", size = 0.2) +
labs(title = "Mapa de Localidades",
fill = "Localidad") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = loca_shp) +
geom_sf(aes(fill = LocNombre), color = "black", size = 0.2) +
scale_fill_brewer(palette = "Set3") +
labs(title = "Mapa de Localidades",
fill = "Localidad") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = loca_shp) +
geom_sf('lightblue', color = "black", size = 0.2) +
scale_fill_brewer(palette = "R") +
labs(title = "Mapa de Localidades",
fill = "Localidad") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = loca_shp) +
geom_sf(fill = 'lightblue', color = "black", size = 0.2) +
scale_fill_brewer(palette = "R") +
labs(title = "Mapa de Localidades",
fill = "Localidad") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = loca_shp) +
geom_sf(fill = 'lightgray', color = "black", size = 0.2) +
labs(title = "Mapa de Localidades",
fill = "Localidad") +
theme_minimal() +
theme(legend.position = "none")
names(df_viajes)
## Mapas origen destino ----
df_viajes <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas)
View(df_viajes)
df_viajes <- read_excel("Datos_Originales/Base_datos_procesada_EODH/XLSX/d. Modulo viajes.xlsx")
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper())
library(stringr)
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper())
### Organizar variables
quitar_tildes <- function(texto) {
iconv(texto, from = "UTF-8", to = "ASCII//TRANSLIT")
}
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper())
View(df_desc)
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper()) %>%
filter(!if_any(everything(), ~ .x == "NO APLICA"))
View(df_desc)
## Mapas origen destino ----
### sf's de origen y destino
loca_ori <- loca_shp %>%
rename(localidad_ori = localidad)
View(loca_shp)
## Mapas origen destino ----
### sf's de origen y destino
loca_ori <- loca_shp %>%
rename(localidad_ori = LocNombre)
loca_des <- loca_shp %>%
rename(localidad_des = LocNombre)
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper()) %>%
filter(!if_any(everything(), ~ .x == "NO APLICA")) %>%
left_join(loca_ori, by = c("localidad_ori" = "localidad_ori"))
View(df_desc)
## Mapas origen destino ----
### sf's de origen y destino
loca_ori <- loca_shp %>%
select(LocNombre, geometry) %>%
rename(localidad_ori = LocNombre) %>%
rename(geometry_ori = geometry)
loca_des <- loca_shp %>%
select(LocNombre, geometry) %>%
rename(localidad_des = LocNombre) %>%
rename(geometry_des = geometry)
View(df_desc)
## Mapas origen destino ----
### sf's de origen y destino
loca_ori <- loca_shp %>%
select(LocNombre, geometry) %>%
rename(localidad_ori = LocNombre) %>%
rename(geometry_ori = geometry)
loca_des <- loca_shp %>%
select(LocNombre, geometry) %>%
rename(localidad_des = LocNombre) %>%
rename(geometry_des = geometry)
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper()) %>%
filter(!if_any(everything(), ~ .x == "NO APLICA")) %>%
left_join(loca_ori, by = c("localidad_ori" = "localidad_ori")) %>%
left_join(loca_des, by = c("localidad_des" = "localidad_des"))
View(df_desc)
group_by(localidad_ori, localidad_des) %>%
summarise(
num_viajes = n(),
duracion_min = mean(duracion_min, na.rm = TRUE),
etapas = mean(etapas, na.rm = TRUE)
)
View(df_desc)
flujos <- df_desc %>%
group_by(localidad_ori, localidad_des) %>%
summarise(
num_viajes = n(),
duracion_min = mean(duracion_min, na.rm = TRUE),
etapas = mean(etapas, na.rm = TRUE)
)
View(flujos)
# Centroides de cada ZAT
centroides <- loca_shp %>%
st_centroid()
View(centroides)
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper()) %>%
filter(!if_any(everything(), ~ .x == "NO APLICA")) %>%
left_join(loca_ori, by = c("localidad_ori" = "localidad_ori")) %>%
left_join(loca_des, by = c("localidad_des" = "localidad_des"))
View(df_desc)
loca_ori <- loca_cen %>%
select(LocNombre, geometry) %>%
rename(localidad_ori = LocNombre) %>%
rename(geometry_ori = geometry)
# Centroides de cada ZAT
loca_cen <- loca_shp %>%
st_centroid()
loca_ori <- loca_cen %>%
select(LocNombre, geometry) %>%
rename(localidad_ori = LocNombre) %>%
rename(geometry_ori = geometry)
loca_des <- loca_cen %>%
select(LocNombre, geometry) %>%
rename(localidad_des = LocNombre) %>%
rename(geometry_des = geometry)
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper()) %>%
filter(!if_any(everything(), ~ .x == "NO APLICA")) %>%
left_join(loca_ori, by = c("localidad_ori" = "localidad_ori")) %>%
left_join(loca_des, by = c("localidad_des" = "localidad_des"))
View(df_desc)
flujos <- df_desc %>%
group_by(localidad_ori, localidad_des) %>%
summarise(
num_viajes = n(),
duracion_min = mean(duracion_min, na.rm = TRUE),
etapas = mean(etapas, na.rm = TRUE)
)
str(flujos)
View(flujos)
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper()) %>%
filter(!if_any(everything(), ~ .x == "NO APLICA")) %>%
left_join(loca_ori, by = c("localidad_ori" = "localidad_ori")) %>%
left_join(loca_des, by = c("localidad_des" = "localidad_des"))
flujos <- df_desc %>%
group_by(localidad_ori, localidad_des) %>%
summarise(
num_viajes = n(),
duracion_min = mean(duracion_min, na.rm = TRUE),
etapas = mean(etapas, na.rm = TRUE)
)
View(flujos)
flujos <- df_desc %>%
group_by(localidad_ori, localidad_des) %>%
summarise(
num_viajes = n(),
duracion_min = mean(duracion_min, na.rm = TRUE),
etapas = mean(etapas, na.rm = TRUE)) %>%
left_join(loca_ori, by = c("localidad_ori" = "localidad_ori")) %>%
left_join(loca_des, by = c("localidad_des" = "localidad_des"))
View(flujos)
View(df_desc)
View(loca_shp)
View(df_viajes)
loca_ori <- loca_cen %>%
select(LocNombre, geometry) %>%
rename(localidad_ori = LocNombre) %>%
rename(geometry_ori = geometry)  %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper())
loca_des <- loca_cen %>%
select(LocNombre, geometry) %>%
rename(localidad_des = LocNombre) %>%
rename(geometry_des = geometry)  %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper())
### Organizar variables
df_desc <- df_viajes %>%
select(localidad_ori, localidad_des, duracion_min, etapas) %>%
mutate(localidad_ori = quitar_tildes(localidad_ori) %>%
str_trim() %>%
str_to_upper()) %>%
mutate(localidad_des = quitar_tildes(localidad_des) %>%
str_trim() %>%
str_to_upper()) %>%
filter(!if_any(everything(), ~ .x == "NO APLICA"))
flujos <- df_desc %>%
group_by(localidad_ori, localidad_des) %>%
summarise(
num_viajes = n(),
duracion_min = mean(duracion_min, na.rm = TRUE),
etapas = mean(etapas, na.rm = TRUE)) %>%
left_join(loca_ori, by = c("localidad_ori" = "localidad_ori")) %>%
left_join(loca_des, by = c("localidad_des" = "localidad_des"))
View(flujos)
str(flujos_shp)
str(flujos)
flujos <- df_desc %>%
group_by(localidad_ori, localidad_des) %>%
summarise(
num_viajes = n(),
duracion_min = mean(duracion_min, na.rm = TRUE),
etapas = mean(etapas, na.rm = TRUE)) %>%
left_join(loca_ori, by = c("localidad_ori" = "localidad_ori")) %>%
left_join(loca_des, by = c("localidad_des" = "localidad_des")) %>%
st_as_sf(wkt = c("geometry_ori", "geometry_des"))
View(flujos)
# Crear l√≠neas (LINESTRING) entre puntos
flujos_shp<- flujos %>%
rowwise() %>%
mutate(geometry = st_sfc(st_linestring(
matrix(c(st_coordinates(geometry_ori), st_coordinates(geometry_des)), ncol = 2, byrow = TRUE)
), crs = 4326)) %>%
st_as_sf()
View(flujos_shp)
# Mapas ----
## Numero de viajes ----
ggplot() +
geom_sf(data = lines_sf, aes(color = num_viajes, size = num_viajes), alpha = 0.6) +
scale_size_continuous(range = c(0.5, 6)) +  # Ajuste de grosor de las l√≠neas
scale_color_gradient(low = "blue", high = "red") +  # Ajuste de color
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Mapa de Viajes entre Localidades",
subtitle = "Conexiones con grosor y color seg√∫n el n√∫mero de viajes",
color = "N√∫mero de Viajes",
size = "N√∫mero de Viajes")
# Crear l√≠neas (LINESTRING) entre puntos
flujos_sf <- flujos %>%
rowwise() %>%
mutate(geometry = st_sfc(st_linestring(
matrix(c(st_coordinates(geometry_ori), st_coordinates(geometry_des)), ncol = 2, byrow = TRUE)
), crs = 4326)) %>%
st_as_sf()
# Mapas ----
## Numero de viajes ----
ggplot() +
geom_sf(data = flujos_sf, aes(color = num_viajes, size = num_viajes), alpha = 0.6) +
scale_size_continuous(range = c(0.5, 6)) +  # Ajuste de grosor de las l√≠neas
scale_color_gradient(low = "blue", high = "red") +  # Ajuste de color
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Mapa de Viajes entre Localidades",
subtitle = "Conexiones con grosor y color seg√∫n el n√∫mero de viajes",
color = "N√∫mero de Viajes",
size = "N√∫mero de Viajes")
View(flujos_sf)
str(flujos_sf)
st_geometry(flujos_sf)[1:5]
# Crear l√≠neas (LINESTRING) entre puntos
flujos_sf <- flujos %>%
st_as_sf() %>%
rowwise() %>%
mutate(
geometry = st_sfc(st_linestring(list(geometry_ori, geometry_des)))  # Crear l√≠nea entre los puntos
) %>%
ungroup()
# Crear l√≠neas (LINESTRING) entre puntos
flujos_sf <- flujos %>%
rowwise() %>%
mutate(geometry = st_sfc(st_linestring(
matrix(c(st_coordinates(geometry_ori), st_coordinates(geometry_des)), ncol = 2, byrow = TRUE)
), crs = 4326)) %>%
st_as_sf()  %>%
st_cast("LINESTRING")
st_geometry(flujos_sf)[1:5]
# Mapas ----
## Numero de viajes ----
ggplot() +
geom_sf(data = flujos_sf, aes(color = num_viajes, size = num_viajes), alpha = 0.6) +
scale_size_continuous(range = c(0.5, 6)) +  # Ajuste de grosor de las l√≠neas
scale_color_gradient(low = "blue", high = "red") +  # Ajuste de color
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Mapa de Viajes entre Localidades",
subtitle = "Conexiones con grosor y color seg√∫n el n√∫mero de viajes",
color = "N√∫mero de Viajes",
size = "N√∫mero de Viajes")
View(flujos_sf)
flujos <- df_desc %>%
group_by(localidad_ori, localidad_des) %>%
summarise(
num_viajes = n(),
duracion_min = mean(duracion_min, na.rm = TRUE),
etapas = mean(etapas, na.rm = TRUE)) %>%
left_join(loca_ori, by = c("localidad_ori" = "localidad_ori")) %>%
left_join(loca_des, by = c("localidad_des" = "localidad_des"))
flujo_sf <- flujos %>%
rowwise() %>%
mutate(
geometry = st_sfc(
st_linestring(c(st_coordinates(geometry_ori)[1,],
st_coordinates(geometry_des)[1,]   # Coordenada de destino
)),
crs = 4326  # Establecer CRS (WGS84)
)
) %>%
st_as_sf()
flujo_sf <- flujos %>%
rowwise() %>%
mutate(
geometry = st_sfc(
st_linestring(c(st_coordinates(geometry_ori)[1,], st_coordinates(geometry_des)[1,])),
crs = 4326 )) %>%
st_as_sf()
flujo_sf <- flujos %>%
rowwise() %>%
mutate(
geometry = st_sfc(
st_linestring(c(
st_coordinates(geometry_ori)[1,],  # Coordenada de origen
st_coordinates(geometry_des)[1,]   # Coordenada de destino
)),
crs = 4326  # Establecer CRS (WGS84)
)
) %>%
st_as_sf()
flujo_sf <- flujos %>%
rowwise() %>%
mutate(
geometry = st_sfc(
st_linestring(list(
st_coordinates(geometry_ori)[1,],  # Coordenada de origen (extraemos las dos columnas de coordenadas)
st_coordinates(geometry_des)[1,]   # Coordenada de destino
)),
crs = 4326  # Establecer CRS (WGS84)
)
) %>%
st_as_sf()
flujo_sf <- flujos %>%
rowwise() %>%
mutate(
geometry = st_sfc(
st_linestring(matrix(
st_coordinates(geometry_ori)[1,],  # Coordenada de origen (extraemos las dos columnas de coordenadas)
st_coordinates(geometry_des)[1,]   # Coordenada de destino
)),
crs = 4326  # Establecer CRS (WGS84)
)
) %>%
st_as_sf()
flujo_sf <- flujos %>%
rowwise() %>%
mutate(
geometry = st_sfc(
st_linestring(matrix(c(
st_coordinates(geometry_ori)[1,],  # Coordenada de origen (extraemos las dos columnas de coordenadas)
st_coordinates(geometry_des)[1,]   # Coordenada de destino
))),
crs = 4326  # Establecer CRS (WGS84)
)
) %>%
st_as_sf()
